# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/openjdk:17.0.8

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
      IMAGE_NAME: nitinkc/test-app

    steps:
      # git pull the latest commit
      - checkout

      # setup testing env
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Login to DockerHub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle test

      # Build using Gradle
      - run:
          name: Change Permission
          command: sudo chmod +x ./gradlew
      - run:
          name: Build with Gradle
          command: ./gradlew clean build

      # Build and push Docker image
      - run:
           name: Build and Push Docker Image
           command: ./gradlew clean build jibDockerBuild -Dimage=$IMAGE_NAME:matu-backend-$CIRCLE_BUILD_NUM

      # Store raw contents of source code
      - store_artifacts:
           path: build/classes
           destination: repo

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows

workflows:
  say-hello-workflow:
    jobs:
      - build
