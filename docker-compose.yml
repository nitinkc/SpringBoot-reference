version: '3.8'

services:
  postgres:
    image: postgres:13.1
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=nichaurasia
      - APP_DB_PASS=a
      - APP_DB_NAME=mydb
      - APP_DB_SCHEMA=test
    volumes: # Providing the customized path to 01-init.sh for entrypoint
      - ./src/main/resources/db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./datasources:/etc/grafana/provisioning/datasources

  redis:
    image: redis/redis-stack-server:7.2.0-v6
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    volumes:
      - ./redis_data:/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    depends_on:
      - postgres
      - prometheus
      - grafana
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb?currentSchema=test
      SPRING_DATASOURCE_USERNAME: nichaurasia
      SPRING_DATASOURCE_PASSWORD: a
      management.endpoints.web.exposure.include: prometheus
      management.endpoint.prometheus.enabled: true